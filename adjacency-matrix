#this is the dictionary from the finished webcrawler.
#(This is just an example)
edges={'http://www.uu.nl':['http://www.uu.nl/en/homepage', 'http://www.uu.nl/homepagina', 'http://www.uu.nl/onderwijs','http://www.uu.nl/organisatie', 'http://www.uu.nl/samenwerken'],'http://www.uu.nl/homepagina':['http://www.uu.nl/en/homepage', 'http://www.uu.nl/organisatie', 'http://pers.uu.nl/plastic-bolletjes-vormen-uit-zichzelf-virusachtige-structuur/']}
#we need a list of all websites saved in lijst
lijst=sorted(edges.keys())

#total number of webpages.
#n.b. this should be equal to the length of our lijst.
num=len(sorted(edges.keys()))

#the following creates a list of 1s and 0s for a particular page (vertex)
#uses the list of all webpages (lijst) and the dictionary(edges)
def row_of_adjacency_matrix(lijst,edges,vertex):
    L=[]
    n=0
    while n<len(lijst):
        if lijst[n] in edges[str(vertex)]:
            L.append(1)
            n=n+1
        elif lijst[n]==str(vertex):
            L.append(1)
            n=n+1
        else:
            L.append(0)
            n=n+1
    return L

#creates the list of lists that my matrix programme can work with

x=0
matrix=[]
while x < num:#num previously defined as total number of webpages (making a row for each)
    vertex=sorted(edges.keys())[x]#each row a separate list
    matrix.append(row_of_adjacency_matrix(lijst,edges,vertex))#creating list of lists
    x=x+1
print(matrix)

#we need a list of all websites saved in lijst
lijst=['http://www.uu.nl','http://www.uu.nl/en/homepage', 'http://www.uu.nl/homepagina', 'http://www.uu.nl/onderwijs', 'http://www.uu.nl/onderzoek', 'http://www.uu.nl/organisatie', 'http://www.uu.nl/samenwerken', 'http://www.uu.nl/organisatie/nieuws-en-agenda', 'http://www.uu.nl/organisatie/contact', 'http://pers.uu.nl/plastic-bolletjes-vormen-uit-zichzelf-virusachtige-structuur/', 'http://www.uu.nl/bachelors', 'http://www.uu.nl/masters', 'http://students.uu.nl', 'http://www.uu.nl/universiteitsbibliotheek', 'http://www.uu.nl/agenda/promotie-karakteristieken-van-het-nederlandse-downsyndroom-screeningsprogramma-spelen-ook-een-rol', 'http://www.uu.nl/agenda/promotie-de-grote-bijkomende-voordelen-van-energie-efficientie', 'http://www.uu.nl/nieuws/besturen-van-de-slimme-duurzame-stad-burgers-aan-zet', 'http://www.uu.nl/organisatie/profiel/cijfers-en-feiten', 'http://www.uu.nl/agenda/sg-movies-science-aan-den-lijve-living-on-one-dollar', 'http://www.uu.nl/nieuws/utrechts-wiskundig-onderzoek-op-alle-fronten-excellent-beoordeeld', 'http://www.uu.nl/nieuws/uuers-schitteren-op-festival-debeschaving', 'http://www.uu.nl/nieuws/plastic-bolletjes-vormen-uit-zichzelf-virusachtige-structuur', 'http://www.uu.nl/organisatie/nieuws-en-agenda/nieuws', 'http://www.uu.nl/rss/435/36011', 'http://www.uu.nl/agenda/tentoonstelling-the-urban-sacred-van-start', 'http://www.uu.nl/agenda/promotie-de-thermodynamische-entropie-van-zwarte-gaten-turend-in-het-kwantumgravitatieregime', 'http://www.uu.nl/agenda/promotie-absolute-galoisgroepen-en-hun-representaties-leveren-oplossingen-voor-getaltheoretische', 'http://www.uu.nl/organisatie/nieuws-en-agenda/agenda?date[date]=&event_type=All', 'http://www.uu.nl/rss/435/36013', 'http://www.uu.nl/onderzoek/profiel/strategische-themas', 'http://www.uu.nl/onderzoek/profiel/focusgebieden', 'http://www.uu.nl/samenwerken', 'http://www.uu.nl/onderzoek/prijzen-en-onderscheidingen', 'http://www.uu.nl/onderwijs/onderwijsaanbod', 'http://www.uu.nl/bachelors/opleidingen', 'http://www.uu.nl/masters/masterprogrammas', 'http://www.uu.nl/en/education/exchange-and-visiting-students', 'http://www.uu.nl/onderwijs/promoveren-aan-de-uu', 'http://www.uu.nl/onderwijs/onderwijsaanbod/onderwijs-voor-professionals', 'http://students.uu.nl/', 'http://www.uu.nl/onderzoek/profiel/strategische-themas', 'http://www.uu.nl/onderzoek/profiel/focusgebieden', 'http://www.uu.nl/onderzoek/onderzoeksgebieden', 'http://www.uu.nl/onderzoek/prijzen-en-onderscheidingen', 'http://www.uu.nl/universiteitsbibliotheek', 'http://www.uu.nl/organisatie/alumni', 'http://www.uu.nl/organisatie/intranet-universiteit-utrecht', 'http://www.uu.nlhttp://www.utrechtuniversitystore.nl', 'http://www.uu.nl/organisatie/werken-bij-de-universiteit-utrecht', 'http://www.uu.nl/medewerkers/', 'http://www.uu.nl/organisatie/contact/disclaimer']
#this is the dictionary from the finished webcrawler.
#(This is just an example)
edges={'http://www.uu.nl':['http://www.uu.nl/en/homepage', 'http://www.uu.nl/homepagina', 'http://www.uu.nl/onderwijs','http://www.uu.nl/organisatie', 'http://www.uu.nl/samenwerken'],'http://www.uu.nl/homepagina':['http://www.uu.nl/en/homepage', 'http://www.uu.nl/organisatie', 'http://pers.uu.nl/plastic-bolletjes-vormen-uit-zichzelf-virusachtige-structuur/']}

#total number of webpages.
#n.b. this should be equal to the length of our lijst.
num=len(sorted(edges.keys()))

#the following creates a list of 1s and 0s for a particular page (vertex)
#uses the list of all webpages (lijst) and the dictionary(edges)
def row_of_adjacency_matrix(lijst,edges,vertex):
    L=[]
    n=0
    while n<len(lijst):
        if lijst[n] in edges[str(vertex)]:
            L.append(1)
            n=n+1
        elif lijst[n]==str(vertex):
            L.append(1)
            n=n+1
        else:
            L.append(0)
            n=n+1
    return L

#creates the list of lists that my matrix programme can work with

x=0
matrix=[]
while x < num:#num previously defined as total number of webpages (making a row for each)
    vertex=sorted(edges.keys())[x]#each row a separate list
    matrix.append(row_of_adjacency_matrix(lijst,edges,vertex))#creating list of lists
    x=x+1
print(matrix)
